<?xml version="1.0"?>
<AlteryxDocument yxmdVer="2021.4">
  <Nodes>
    <Node ToolID="1">
      <GuiSettings Plugin="JupyterCode">
        <Position x="438" y="114" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <WorkflowName>c:\users\mikegoodstein\downloads\exceltemplatecopier\excel template sheet copier.yxmc</WorkflowName>
          <JupyterProduction>true</JupyterProduction>
          <vEnvName>designerbasetools_venv</vEnvName>
          <DefaultVenv>1</DefaultVenv>
          <productionModeScript>#################################
# List all non-standard packages to be imported by your 
# script here (only missing packages will be installed)
from ayx import Package
#Package.installPackages(['pandas','numpy'])
import importlib.util
import sys

name = 'openpyxl'

if name in sys.modules:
    print(f"{name!r} already in sys.modules")
elif (spec := importlib.util.find_spec(name)) is not None:
    # If you chose to perform the actual import ...
    module = importlib.util.module_from_spec(spec)
    sys.modules[name] = module
    spec.loader.exec_module(module)
    print(f"{name!r} has been imported")
else:
    try:
        Package.installPackages(name)
        module = importlib.util.module_from_spec(spec)
        sys.modules[name] = module
        spec.loader.exec_module(module)
        print(f"{name!r} has been imported")
    except:
        print(f"can't find or install the {name!r} module")



#################################
from ayx import Alteryx

AlteryxDF=Alteryx.read("#1")

import importlib.util
import sys
import pandas as pd
try:
    from openpyxl import load_workbook
except:
    print('Modules missing')


# For illustrative purposes.

def sheet_copier(df):
    listOfUniques = df['Full Path'].unique()
    for unique in listOfUniques:
        wb = load_workbook(unique)
        tempdf = df[ df['Full Path'] == unique]
        OrgSheet=tempdf['Original Sheet'].unique()
        for sheet in OrgSheet:
            newSheet=tempdf[tempdf['Original Sheet']==sheet]
            listofNewSheets=newSheet['New Sheet'].unique()
            for newCopy in listofNewSheets:
                dup_ws = wb.copy_worksheet(wb[sheet])
                dup_ws.title = newCopy
                wb.create_sheet(newCopy)
                if f'{newCopy}1' in wb.sheetnames:
                    wb.remove(wb[f'{newCopy}1'])
                print(f'{newCopy} has been created in {unique} from {sheet}')
                wb.save(unique)
                
name = 'openpyxl'

if name in sys.modules:
    sheet_copier(AlteryxDF)
else:
    print(f"can't find the {name!r} module")




#################################
</productionModeScript>
          <Port>62862</Port>
          <JupyterGuidDir>2f607194a981a4757ddc60a48b9b54a4</JupyterGuidDir>
          <JupyterGuidCopy />
          <LastExecutedByEngineVersion>2021.4.2.47802</LastExecutedByEngineVersion>
          <Notebook><![CDATA[{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"ayx":{"cell_class":"code_cell","cell_css":"border: 1px solid #58a; margin: 2px;","cell_type":"code","contents_keyword":"installPackages","first_line":"# List all non-standard packages to be imported by your","label":"deps"}},"outputs":[],"source":["# List all non-standard packages to be imported by your \n","# script here (only missing packages will be installed)\n","from ayx import Package\n","#Package.installPackages(['pandas','numpy'])\n","import importlib.util\n","import sys\n","\n","name = 'openpyxl'\n","\n","if name in sys.modules:\n","    print(f\"{name!r} already in sys.modules\")\n","elif (spec := importlib.util.find_spec(name)) is not None:\n","    # If you chose to perform the actual import ...\n","    module = importlib.util.module_from_spec(spec)\n","    sys.modules[name] = module\n","    spec.loader.exec_module(module)\n","    print(f\"{name!r} has been imported\")\n","else:\n","    try:\n","        Package.installPackages(name)\n","        module = importlib.util.module_from_spec(spec)\n","        sys.modules[name] = module\n","        spec.loader.exec_module(module)\n","        print(f\"{name!r} has been imported\")\n","    except:\n","        print(f\"can't find or install the {name!r} module\")\n"]},{"cell_type":"code","execution_count":33,"metadata":{},"outputs":[],"source":["from ayx import Alteryx\n","\n","AlteryxDF=Alteryx.read(\"#1\")\n","\n","import importlib.util\n","import sys\n","import pandas as pd\n","try:\n","    from openpyxl import load_workbook\n","except:\n","    print('Modules missing')\n","\n","\n","# For illustrative purposes.\n","\n","def sheet_copier(df):\n","    listOfUniques = df['Full Path'].unique()\n","    for unique in listOfUniques:\n","        wb = load_workbook(unique)\n","        tempdf = df[ df['Full Path'] == unique]\n","        OrgSheet=tempdf['Original Sheet'].unique()\n","        for sheet in OrgSheet:\n","            newSheet=tempdf[tempdf['Original Sheet']==sheet]\n","            listofNewSheets=newSheet['New Sheet'].unique()\n","            for newCopy in listofNewSheets:\n","                dup_ws = wb.copy_worksheet(wb[sheet])\n","                dup_ws.title = newCopy\n","                wb.create_sheet(newCopy)\n","                if f'{newCopy}1' in wb.sheetnames:\n","                    wb.remove(wb[f'{newCopy}1'])\n","                print(f'{newCopy} has been created in {unique} from {sheet}')\n","                wb.save(unique)\n","                \n","name = 'openpyxl'\n","\n","if name in sys.modules:\n","    sheet_copier(AlteryxDF)\n","else:\n","    print(f\"can't find the {name!r} module\")\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"designerbasetools_venv","language":"python","name":"designerbasetools_venv"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"nbformat":4,"nbformat_minor":2}]]></Notebook>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxJupyterPluginEngine.dll" EngineDllEntryPoint="AlteryxJupyter" />
    </Node>
    <Node ToolID="2">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroInput.MacroInput">
        <Position x="66" y="150" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UseFileInput value="False" />
          <Name>Template Sheet copier</Name>
          <Abbrev />
          <ShowFieldMap value="True" />
          <Optional value="False" />
          <TextInput>
            <Configuration>
              <NumRows value="0" />
              <Fields>
                <Field name="Full Path" />
                <Field name="Original Sheet" />
                <Field name="New Sheet" />
              </Fields>
              <Data />
            </Configuration>
          </TextInput>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>Input</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Full Path" size="1073741823" source="TextInput:" type="V_WString" />
            <Field name="Original Sheet" size="1073741823" source="TextInput:" type="V_WString" />
            <Field name="New Sheet" size="1073741823" source="TextInput:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroInput" />
    </Node>
    <Node ToolID="3">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="222" y="150" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="trim([Full Path],'&quot;')" field="Full Path" size="74" type="String" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText><![CDATA[Full Path = trim([Full Path],'"')
]]></DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Full Path" size="1073741823" source="Formula: trim([Full Path],'&quot;')" type="V_WString" />
            <Field name="Original Sheet" size="1073741823" source="TextInput:" type="V_WString" />
            <Field name="New Sheet" size="1073741823" source="TextInput:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="4">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.Tab.Tab">
        <Position x="0" y="0" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="5">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="522" y="78" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="&quot;the job has been completed&quot;" field="&quot;message&quot;" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText><![CDATA["message" = "the job has been completed"
]]></DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="6">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="618" y="78" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>Output6</Name>
          <Abbrev />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
  </Nodes>
  <Connections>
    <Connection>
      <Origin ToolID="1" Connection="Output1" />
      <Destination ToolID="5" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="2" Connection="Output" />
      <Destination ToolID="3" Connection="Input" />
    </Connection>
    <Connection name="#1">
      <Origin ToolID="3" Connection="Output" />
      <Destination ToolID="1" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="5" Connection="Output" />
      <Destination ToolID="6" Connection="Input" />
    </Connection>
  </Connections>
  <Properties>
    <Memory default="True" />
    <GlobalRecordLimit value="0" />
    <TempFiles default="True" />
    <Annotation on="True" includeToolName="False" />
    <ConvErrorLimit value="10" />
    <ConvErrorLimit_Stop value="False" />
    <CancelOnError value="False" />
    <DisableBrowse value="False" />
    <EnablePerformanceProfiling value="False" />
    <PredictiveToolsCodePage value="1252" />
    <DisableAllOutput value="False" />
    <ShowAllMacroMessages value="False" />
    <ShowConnectionStatusIsOn value="True" />
    <ShowConnectionStatusOnlyWhenRunning value="True" />
    <ZoomLevel value="0" />
    <LayoutType>Horizontal</LayoutType>
    <Constants>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Macro Input (2)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Macro Output (6)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
    </Constants>
    <MetaInfo>
      <NameIsFileName value="True" />
      <Name>Excel Template Sheet Copier</Name>
      <Description />
      <RootToolName />
      <ToolVersion />
      <ToolInDb value="False" />
      <CategoryName />
      <SearchTags />
      <Author />
      <Company />
      <Copyright />
      <DescriptionLink actual="" displayed="" />
      <Example>
        <Description />
        <File />
      </Example>
      <WorkflowId value="d40c29d3-b216-486e-9707-ae680eaa8678" />
      <Telemetry>
        <PreviousWorkflowId value="ad5ec724-f378-487b-b841-18786060f50d" />
        <OriginWorkflowId value="ecd51dd1-ae27-4fc8-98f2-199d66abe447" />
      </Telemetry>
    </MetaInfo>
    <Events>
      <Enabled value="True" />
    </Events>
    <RuntimeProperties>
      <Actions />
      <Questions>
        <Question>
          <Type>Tab</Type>
          <Description>Questions</Description>
          <Name>Tab (4)</Name>
          <ToolId value="4" />
          <Questions>
            <Question>
              <Type>MacroInput</Type>
              <Description />
              <Name>Macro Input (2)</Name>
              <ToolId value="2" />
            </Question>
            <Question>
              <Type>MacroOutput</Type>
              <Description />
              <Name>Macro Output (6)</Name>
              <ToolId value="6" />
            </Question>
          </Questions>
        </Question>
      </Questions>
      <ModuleType>Macro</ModuleType>
      <MacroCustomHelp value="False" />
      <MacroDynamicOutputFields value="False" />
      <MacroImageStd value="39" />
      <MacroInputs />
      <MacroOutputs />
      <Wiz_CustomHelp value="False" />
      <Wiz_CustomGraphic value="False" />
      <Wiz_ShowOutput value="True" />
      <Wiz_OpenOutputTools>
        <Tool ToolId="6" Selected="False" />
      </Wiz_OpenOutputTools>
      <Wiz_OutputMessage />
      <Wiz_NoOutputFilesMessage />
      <Wiz_ChainRunWizard />
    </RuntimeProperties>
  </Properties>
</AlteryxDocument>
